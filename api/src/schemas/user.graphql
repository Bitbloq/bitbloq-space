# import Date, ObjectID, EmailAddress, JSON from "./scalars.graphql"
# import Document from "./document.graphql"

directive @authRequired(
  requires: [Role] = [ADMIN],
) on QUERY | FIELD

enum Role {
  ADMIN
  USER
  EPHEMERAL
}

type Query {
  users: [User]   @authRequired(requires: [ADMIN])
  me: User        @authRequired(requires: [USER])
}
type Mutation {
  activateAccount(token: String): String
  signUpUser(input: UserIn!): String
  login(email: EmailAddress!, password: String!): String
  deleteUser(id: ObjectID!): User                           @authRequired(requires: [USER])
  updateUser(id: ObjectID!, input: UserIn!): User           @authRequired(requires: [USER])
}

type User {
  id: ObjectID
  email: EmailAddress
  password: String
  name: String
  center: String
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  createdAt: Date
  updatedAt: Date
  signUpSurvey: JSON
  documents: [Document]
}

input UserIn {
  email: EmailAddress
  password: String
  name: String
  center: String
  active: Boolean
  signUpToken: String
  authToken: String
  notifications: Boolean
  signUpSurvey: JSON
}
